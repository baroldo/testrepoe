import pandas as pd
from sklearn.preprocessing import OneHotEncoder
from sklearn.cluster import KMeans
from sklearn.pipeline import make_pipeline

# Step 0: Load your data
# df = pd.read_csv("your_data.csv")
feature_cols = ['cat1', 'cat2', 'cat3', 'cat4', 'cat5', 'cat6']

# Step 1: One-hot encode
encoder = OneHotEncoder(handle_unknown='ignore')
X_encoded = encoder.fit_transform(df[feature_cols])


n_clusters = 5  # You can tune this later

model = KMeans(n_clusters=n_clusters, random_state=42)
df['x'] = model.fit_predict(X_encoded)


# See average profile of each group
group_profile = df.groupby('x')[feature_cols].agg(lambda x: x.value_counts().index[0])
print(group_profile)


from sklearn.metrics import silhouette_score

scores = []
for k in range(2, 10):
    km = KMeans(n_clusters=k, random_state=42)
    labels = km.fit_predict(X_encoded)
    score = silhouette_score(X_encoded, labels)
    scores.append((k, score))

# Plot the scores to find the elbow (best k)
import matplotlib.pyplot as plt

x, y = zip(*scores)
plt.plot(x, y, marker='o')
plt.xlabel('Number of clusters (k)')
plt.ylabel('Silhouette Score')
plt.title('Find Optimal k')
plt.show()


