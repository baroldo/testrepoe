import pandas as pd
import numpy as np

def calculate_yearly_percent_change(df_wide):
    df = df_wide.copy()

    # Identify month columns by excluding 'customer_number'
    month_columns = [col for col in df.columns if col != 'customer_number']
    
    results = []

    for _, row in df.iterrows():
        # Find last non-zero value in the month columns
        last_non_zero_col = None
        for col in reversed(month_columns):
            val = row[col]
            if pd.notna(val) and val != 0:
                last_non_zero_col = col
                break

        if last_non_zero_col is None:
            results.append(1)
            continue

        try:
            # Get index of last non-zero column
            col_idx = month_columns.index(last_non_zero_col)

            # Get the column 12 months earlier
            prev_idx = col_idx - 12
            if prev_idx < 0:
                results.append(1)
                continue

            recent_val = row[month_columns[col_idx]]
            prev_val = row[month_columns[prev_idx]]

            if pd.isna(prev_val) or prev_val == 0:
                results.append(1)
            else:
                pct_change = (recent_val - prev_val) / prev_val
                results.append(pct_change)
        except Exception:
            results.append(1)

    # Return the result as a Series to be added to the original DataFrame
    return pd.Series(results, name="pct_change_from_last_year")

# Assuming 'df_wide' includes 'customer_number' and monthly columns
df_wide['pct_change_from_last_year'] = calculate_yearly_percent_change(df_wide)
